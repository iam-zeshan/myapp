{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","placeholder","aria-checked","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","Word","setWord","_useState3","_useState4","ReplaceWith","setReplaceWith","_useState5","_useState6","wordLength","setWordLength","_useState7","_useState8","lettersLength","setLettersLength","_useState9","_useState10","text","setText","value","onChange","event","target","split","length","newText","join","rows","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","replaceAll","App","setMode","Fragment","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ba2e9803.chunk.js","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className={`form-control me-2 bg-${props.mode} text-${props.mode === 'light' ? 'dark' : 'light'}`}\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'} mx-3`}>\r\n            <input className=\"form-check-input\" aria-checked='false' onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n// Navbar.propTypes = {\r\n//     title: PropTypes.string\r\n// };\r\n\r\n// Navbar.defaultProps = {\r\n//     title: \"set title here\"\r\n// };","import React, { useState } from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"onClick method was called\" + text);\r\n        // setText(\"you have change the state of the box\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n\r\n        setWordLength(newText);\r\n        setLettersLength(newText);\r\n\r\n        let newWord = \"\";\r\n        setWord(newWord);\r\n\r\n        let newReplaceWith = \"\";\r\n        setReplaceWith(newReplaceWith);\r\n    }\r\n    const [Word, setWord] = useState('');\r\n    const [ReplaceWith, setReplaceWith] = useState('');\r\n\r\n    const handleOnChangeForWord = (event) => {\r\n        setWord(event.target.value);\r\n    }\r\n    const handleOnChangeForReplaceWith = (event) => {\r\n        setReplaceWith(event.target.value);\r\n    }\r\n\r\n    const handleReplaceClick = () => {\r\n        // const Word;\r\n        // const ReplaceWith;\r\n        let newText = text.replaceAll(Word, ReplaceWith);\r\n        setText(newText);\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"onChange method was called\");\r\n        setText(event.target.value);\r\n        setWordLength(text.split(/[ ]+/).length);\r\n        let newText = text.split(/[ ]+/);\r\n        setLettersLength(newText.join(\"\").length);\r\n    }\r\n    const [wordLength, setWordLength] = useState(null)\r\n    const [lettersLength, setLettersLength] = useState(null)\r\n\r\n    const [text, setText] = useState('');\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"mb-3\">\r\n                <textarea className={`form-control bg-${props.mode === 'light'? 'light': 'dark'} text-${props.mode === 'light'? 'dark': 'light'}`} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                <button className={`btn btn-${props.mode === 'light'? 'primary': 'warning'} my-2 mx-2`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className={`btn btn-${props.mode === 'light'? 'primary': 'warning'} my-2 `} onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className={`btn btn-${props.mode === 'light'? 'primary': 'warning'} my-2 mx-2`} onClick={handleClearClick}>Clear</button>\r\n                <button className={`btn btn-${props.mode === 'light'? 'primary': 'warning'} my-2`} onClick={handleCopy}>Copy Text</button>\r\n                <button className={`btn btn-${props.mode === 'light'? 'primary': 'warning'} my-2 mx-2`} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"word\" className=\"form-label\">Word</label>\r\n                <input type=\"text\" className={`form-control bg-${props.mode === 'light'? 'light': 'dark'} text-${props.mode === 'light'? 'dark': 'light'}`} value={Word} onChange={handleOnChangeForWord} id=\"word\"/>\r\n                <label htmlFor=\"replaceWith\" className=\"form-label\">Replace with</label>\r\n                <input type=\"text\" className={`form-control bg-${props.mode === 'light'? 'light': 'dark'} text-${props.mode === 'light'? 'dark': 'light'}`} value={ReplaceWith} onChange={handleOnChangeForReplaceWith} id=\"replaceWith\"/>\r\n                <button className={`btn btn-${props.mode === 'light'? 'primary': 'warning'} my-2`} onClick={handleReplaceClick}>Replace</button>\r\n            </div>\r\n            <div>\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text.length>0? wordLength: '0'} Words and {text.length>0? lettersLength: '0'} Characters</p>\r\n                <p>{text.length>0? 0.008 * wordLength: \"0\"} Minutes to Read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0? text: \"Enter some text in above text Box to preview it here\"}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\n// import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport React, { useState } from 'react';\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  let titly = \"TextUtils\";\n  const [mode, setMode] = useState('light');\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#202931';\n      document.body.style.color = 'white';\n\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n\n    }\n  }\n\n  return (\n    <>\n      {/* <BrowserRouter> */}\n        <Navbar title={titly} mode={mode} toggleMode={toggleMode} />\n        {/* <Routes> */}\n          {/* <Route exact path=\"/\" element={ */}\n              <div className=\"container my-3\">\n                <h2>Enter the text to Analyse below</h2>\n                <TextForm mode={mode} />\n              </div>\n          {/* } />\n          <Route exact path='/about' element={<About />} />\n        </Routes>\n      </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}